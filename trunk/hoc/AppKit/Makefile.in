include ../config.mk

dist_srcdir = AppKit
dist_FILES = \
	AppKit-gnustep.conf \
	AppKit-macos.conf \
	Makefile.in \
	$(NULL)

all: libHSAppKit.a libHSAppKit_dyn.dylib HSAppKit.o register-inplace

register-inplace: AppKit.conf-inplace
	[ -f "../inplace.conf" ] || echo '[]' > ../inplace.conf
	$(GHC_PKG) update AppKit.conf-inplace \
		--package-conf=../inplace.conf

exposed-modules.txt:
	find build/imports | grep '\.hi' \
            | sed 's@build/imports/@ ,@g' | sed 's/\.hi//g' | sed 's@/@.@g' \
            > exposed-modules.txt

AppKit.conf-inplace: AppKit-$(PLATFORM).conf-inplace.in exposed-modules.txt
	cat AppKit-$(PLATFORM).conf-inplace.in exposed-modules.txt > AppKit.conf-inplace

AppKit.conf: AppKit-$(PLATFORM).conf exposed-modules.txt
	cat AppKit-$(PLATFORM).conf exposed-modules.txt > AppKit.conf

ghcmake: ghcmake.build-stamp

ghcmake.build-stamp:
	ln -sf ../Bindings/ifgen-output/Cocoa.hs .
	ln -sf ../Bindings/ifgen-output/AppKit.hs .
	ln -sf ../Bindings/ifgen-output/AppKit .
	test ! -d ../Bindings/ifgen-output/GNUstepGUI || \
		ln -sf ../Bindings/ifgen-output/GNUstepGUI .
	test ! -r ../Bindings/ifgen-output/GNUstepGUI.hs || \
		ln -sf ../Bindings/ifgen-output/GNUstepGUI.hs .
	mkdir -p build/objects
	mkdir -p build/imports
	$(GHC) --make AppKit.hs	\
		-fPIC -dynamic \
		-ignore-package AppKit	\
		-odir build/objects \
		-hidir build/imports	\
		-package-conf ../inplace.conf \
		-fglasgow-exts
	test ! -r GNUstepGUI.hs || \
		$(GHC) --make GNUstepGUI.hs	\
			-ignore-package AppKit	\
			-odir build/objects \
			-hidir build/imports	\
			-package-conf ../inplace.conf \
			-fglasgow-exts
	$(GHC) -c Cocoa.hs \
		-fPIC -dynamic \
		-ignore-package AppKit	\
		-ibuild/imports	   \
		-o build/objects/Cocoa.o	\
		-ohi build/imports/Cocoa.hi \
		-package-conf ../inplace.conf \
		-fglasgow-exts
	touch $@
	
HSAppKit.o: ghcmake.build-stamp
	find build/objects/ -name \*.o | xargs ld -r -x -o HSAppKit.o

libHSAppKit.a: ghcmake
	find build/objects/ -name \*.o | xargs libtool -static -o libHSAppKit.a

libHSAppKit_dyn.dylib: ghcmake
	export MACOSX_DEPLOYMENT_TARGET=10.3 && find build/objects/ -name \*.o \
	 | xargs libtool -read_only_relocs suppress -dynamic -o $@ -undefined dynamic_lookup
	install_name_tool -id "`pwd`/$@" $@

#libHSAppKit.a: HSAppKit.o
#	rm -f libHSAppKit.a
#	ar cq libHSAppKit.a HSAppKit.o
#	ranlib libHSAppKit.a

clean:
	rm -rf build libHSAppKit.a HSAppKit.o AppKit.hs AppKit \
	    Cocoa.hs ghcmake.build-stamp

install: all AppKit.conf
	mkdir -p $(GHC_LIB_PATH)/AppKit
	cp -R libHSAppKit.a HSAppKit.o build/imports libHSAppKit_dyn.dylib \
	 $(GHC_LIB_PATH)/AppKit/
	ranlib $(GHC_LIB_PATH)/AppKit/libHSAppKit.a
	ghc-pkg --update-package	\
			--input-file=AppKit.conf

