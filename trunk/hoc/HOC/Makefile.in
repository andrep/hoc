include ../config.mk

dist_srcdir = HOC
dist_FILES = \
	HOC \
	HOC-gnustep.conf \
	HOC-gnustep.conf-inplace \
	HOC-macos.conf \
	HOC-macos.conf-inplace \
	HOC.hs \
	Makefile.in \
	$(NULL)

all: libHOC.a HOC.o ../inplace.conf

../inplace.conf: HOC.conf-inplace
	[ -f "$@" ] || echo '[]' > $@
	$(GHC_PKG) update HOC.conf-inplace \
		--package-conf=../inplace.conf

%.conf: %.conf.in
	gcc -E -x c -DGHC_LIB_PATH=@GHC_LIB_PATH@ \
        	-DFOUNDATION_LIB_DIRS=@HOC_FOUNDATION_LIB_DIRS@ \
		@HOC_DEFINES@ $< | grep -v '^#' > $@ 
%.conf-inplace: %.conf.in
	gcc -E -x c -DINPLACE=1 \
		-DGHC_LIB_PATH=@GHC_LIB_PATH@ \
        	-DFOUNDATION_LIB_DIRS=@HOC_FOUNDATION_LIB_DIRS@ \
		@HOC_DEFINES@ $< | grep -v '^#' > $@ 

libHOC.a: ghcmake.build-stamp
	find build/objects/ -name \*.o | xargs $(MAKE_STATIC_LIB) libHOC.a

libHOC_dyn.dylib: ghcmake
	export MACOSX_DEPLOYMENT_TARGET=10.3 && find build/objects/ -name \*.o \
	 | xargs libtool \
	   -dynamic \
	   -undefined dynamic_lookup \
	   -o $@
	install_name_tool -id "`pwd`/$@" $@

HOC.o: libHOC.a
	ld -r -x -o HOC.o $(ALL_LOAD) libHOC.a

ghcmake: ghcmake.build-stamp


# XXX: GHC 6.4 has a really ... _weird_ bug where it won't compile
# HOC/StdArgumentTypes.hs properly if you just try ghc --make with HOC.hs.
# There seems to be a problem with GHC's .hi file chasing with
# HOC/Arguments.hs; obviously the long-term solution is to fix GHC, but for
# now, we work around it by compiling HOC/Arguments.hs first.
ghcmake.build-stamp:
	mkdir -p build/objects
	mkdir -p build/imports
	$(GHC) --make HOC/Arguments.hs	\
		-odir build/objects -hidir build/imports	\
		-fglasgow-exts -fth \
		../HOC_cbits/HOC_cbits.o	\
		-I../HOC_cbits	\
		-I../libffi-src/build/include	\
		-ignore-package HOC \
		$(FOUNDATION_INCLUDES) \
		$(FOUNDATION_LIBS)      \
                $(DEFINES)
	$(GHC) --make HOC.hs	\
		-O -fasm \
		-odir build/objects -hidir build/imports	\
		-fglasgow-exts -fth \
		../HOC_cbits/HOC_cbits.o	\
		-I../HOC_cbits	\
		-I../libffi-src/build/include	\
		-ignore-package HOC \
		$(FOUNDATION_INCLUDES) \
		$(FOUNDATION_LIBS)      \
                $(DEFINES)
	touch $@

clean:
	rm -rf libHOC.a HOC.o build \
	    HOC/NewClass_stub.c HOC/NewClass_stub.h \
	    ghcmake.build-stamp

install: install-files
	ranlib "$(destdir)"/$(GHC_LIB_PATH)/HOC/libHOC.a
	$(GHC_PKG) update HOC.conf
       
install-files: all HOC.conf
	mkdir -p "$(destdir)"/$(GHC_LIB_PATH)/HOC
	cp -R libHOC.a HOC.o build/imports \
		"$(destdir)"/$(GHC_LIB_PATH)/HOC/
