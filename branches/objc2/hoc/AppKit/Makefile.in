include ../config.mk

dist_srcdir = AppKit
dist_FILES = \
	AppKit-gnustep.conf \
	AppKit-macos.conf \
	Makefile.in \
	$(NULL)

ifeq "$(HocBuildDylibs)" "YES"
LIBRARIES=libHSAppKit.a libHSAppKit_dyn.dylib
else
LIBRARIES=libHSAppKit.a HSAppKit.o
endif

APPKITLIBDIR="$(destdir)"/$(GHC_LIB_PATH)/AppKit

all: $(LIBRARIES) register-inplace.build-stamp

register-inplace.build-stamp: AppKit.conf-inplace
	[ -f "../inplace.conf" ] || echo '[]' > ../inplace.conf
	$(GHC_PKG) update AppKit.conf-inplace \
		--package-conf=../inplace.conf
	touch $@

exposed-modules.txt:
	find build/imports | grep '\.hi' \
            | sed 's@build/imports/@ @g' | sed 's/\.hi//g' | sed 's@/@.@g' \
            > exposed-modules.txt

AppKit.conf-inplace: AppKit.conf.in exposed-modules.txt
	gcc -E -x c -DINPLACE=1 \
		-DGHC_LIB_PATH=@GHC_LIB_PATH@ \
        	-DFOUNDATION_LIB_DIRS=@HOC_FOUNDATION_LIB_DIRS@ \
		@HOC_DEFINES@ AppKit.conf.in | grep -v '^#' > AppKit.conf-inplace 
	cat exposed-modules.txt >> AppKit.conf-inplace

AppKit.conf: AppKit.conf.in exposed-modules.txt
	gcc -E -x c -DGHC_LIB_PATH=@GHC_LIB_PATH@ \
        	-DFOUNDATION_LIB_DIRS=@HOC_FOUNDATION_LIB_DIRS@ \
		@HOC_DEFINES@ AppKit.conf.in | grep -v '^#' > $@ 
	cat exposed-modules.txt >> AppKit.conf

ghcmake.build-stamp:
	ln -sf ../Bindings/ifgen-output/Cocoa.hs .
	ln -sf ../Bindings/ifgen-output/AppKit.hs .
	ln -sf ../Bindings/ifgen-output/AppKit .
	test ! -d ../Bindings/ifgen-output/GNUstepGUI || \
		ln -sf ../Bindings/ifgen-output/GNUstepGUI .
	test ! -r ../Bindings/ifgen-output/GNUstepGUI.hs || \
		ln -sf ../Bindings/ifgen-output/GNUstepGUI.hs .
	mkdir -p build/objects
	mkdir -p build/imports
	$(GHC) --make AppKit.hs	\
		-O -fasm \
		-package-name AppKit	\
		-odir build/objects \
		-hidir build/imports	\
		-package-conf ../inplace.conf \
		-fglasgow-exts -fth \
		-package unix \
		$(EXTRA_GHCFLAGS)
	test ! -r GNUstepGUI.hs || \
		$(GHC) --make GNUstepGUI.hs	\
			-package-name AppKit	\
			-odir build/objects \
			-hidir build/imports	\
			-package-conf ../inplace.conf \
			-fglasgow-exts -fth \
			$(EXTRA_GHCFLAGS)
	$(GHC) -c Cocoa.hs \
		-package-name AppKit	\
		-ibuild/imports	   \
		-o build/objects/Cocoa.o	\
		-ohi build/imports/Cocoa.hi \
		-package-conf ../inplace.conf \
		-fglasgow-exts -fth \
		$(EXTRA_GHCFLAGS)
	touch $@
	
HSAppKit.o: ghcmake.build-stamp
	find build/objects/ -name \*.o | xargs ld -r -x -o HSAppKit.o

libHSAppKit.a: ghcmake.build-stamp
	find build/objects/ -name \*.o | xargs $(MAKE_STATIC_LIB) libHSAppKit.a

libHSAppKit_dyn.dylib: ghcmake.build-stamp
	export MACOSX_DEPLOYMENT_TARGET=10.3 && find build/objects/ -name \*.o \
	 | xargs libtool -dynamic -o $@ -undefined dynamic_lookup -single_module
	install_name_tool -id "`pwd`/$@" $@

clean:
	rm -rf build libHSAppKit.a libHSAppKit_dyn.dylib HSAppKit.o \
	    AppKit.hs AppKit Cocoa.hs ghcmake.build-stamp \
	    exposed-modules.txt AppKit.conf AppKit.conf-inplace \
	    register-inplace.build-stamp

install: install-files
	ranlib $(APPKITLIBDIR)/libHSAppKit.a
ifeq "$(HocBuildDylibs)" "YES"
	install_name_tool -id $(APPKITLIBDIR)/libHSAppKit_dyn.dylib \
	   $(APPKITLIBDIR)/libHSAppKit_dyn.dylib
endif
	ghc-pkg --update-package --input-file=AppKit.conf

install-files: all AppKit.conf
	mkdir -p $(APPKITLIBDIR)
	cp -R $(LIBRARIES) build/imports \
	 $(APPKITLIBDIR)

